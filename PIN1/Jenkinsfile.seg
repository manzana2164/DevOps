pipeline {
  agent any

  options {
    timeout(time: 2, unit: 'MINUTES')
  }

  environment {
    ARTIFACT_ID = "elbuo8/webapp:${env.BUILD_NUMBER}"
    DOCKER_HUB_TOKEN = credentials('dockerhub-token') 
    DOCKER_HUB_REPO = "manzana2164/devops"
  }
   stages {
   stage('Checkout') {
      steps {
        // Realiza el checkout de la rama 'main'
        checkout([$class: 'GitSCM', branches: [[name: '*/main']], userRemoteConfigs: [[url: 'https://github.com/manzana2164/DevOps.git']]])
      }
    }
    
   stage('Building image') {
      steps{
          sh '''
          cd PIN1
          docker build -t testapp .
             '''  
        }
    }
   stage('Run tests') {
      steps {
        sh "docker run testapp npm test"
      }
    }
   stage('Deploy Image') {
      steps{
        sh '''
        docker tag testapp 127.0.0.1:5000/mguazzardo/testapp
        docker push 127.0.0.1:5000/mguazzardo/testapp   
        '''
        }
      }
      
   stage('Deploy Image to Docker Hub') {
      steps {
        script {
          // Iniciar sesi√≥n en Docker Hub
          sh "echo ${DOCKER_HUB_TOKEN} | docker login --username manzana2164 --password-stdin"
          // Etiquetar la imagen para Docker Hub
          sh '''
            docker tag testapp ${DOCKER_HUB_REPO}:latest
            docker push ${DOCKER_HUB_REPO}:latest
          '''
        }
      }
    }

   stage('Vulnerability Scan - Docker ') {
        steps {
          sh "docker run  -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy image --severity=CRITICAL 127.0.0.1:5000/mguazzardo/testapp"
            }
        }
    }
}
